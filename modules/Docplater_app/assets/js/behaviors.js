// Generated by LiveScript 1.4.0
/**
 * @package   Docplater app
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2016, Nazar Mokrynskyi
 * @license   AGPL-3.0, see license.txt
 */
(function(){
  /**
   * @param {Element}	element
   * @param {string}	selector
   *
   * @return {(Element|null)}
   */
  var x$, ref$;
  function find_parent(element, selector){
    while (element) {
      element = element.parentNode || element.host;
      if (element instanceof Element && element.matches(selector)) {
        return element;
      }
    }
    return null;
  }
  x$ = (ref$ = cs.Docplater || (cs.Docplater = {})).behaviors || (ref$.behaviors = {});
  x$.attached_once = {
    created: function(){
      var this$ = this;
      this.attached_once = new Promise(function(resolve){
        this$._attached_once_resolve = resolve;
      });
    },
    attached: function(){
      if (this._attached_once_resolve) {
        this._attached_once_resolve();
        delete this._attached_once_resolve;
      }
    }
  };
  x$.document = {
    properties: {
      document: Object
    },
    attached: function(){
      this.set('document', find_parent(this, 'docplater-document'));
    }
  };
  x$.document_clause = {
    properties: {
      clause: Object
    },
    attached: function(){
      this.set('clause', find_parent(this, 'docplater-document-clause'));
    }
  };
}).call(this);
