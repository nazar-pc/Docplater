// Generated by LiveScript 1.4.0
/**
 * @package   Docplater app
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2016, Nazar Mokrynskyi
 * @license   AGPL-3.0, see license.txt
 */
(function(){
  cs.Docplater.Redux.behavior.then(function(reduxBehavior){
    Polymer({
      is: 'docplater-clauses-search',
      behaviors: [cs.Docplater.behaviors.attached_once, reduxBehavior],
      properties: {
        document: {
          statePath: 'document',
          type: Object
        },
        clauses: Array,
        scribe_instance: {
          observer: '_scribe_instance',
          type: Object
        }
      },
      created: function(){
        var this$ = this;
        this.attached_once.then(function(){
          return cs.api('get api/Docplater_app/clauses');
        }).then(function(clauses){
          this$.clauses = clauses;
        });
      },
      _scribe_instance: function(){
        this.ssa = new cs.Docplater.simple_scribe_api(this.scribe_instance);
      },
      _insert_clause: function(e){
        var hash, instance, clause, ref$;
        if (this.ssa) {
          hash = e.model.item.hash;
          this.dispatch({
            type: 'CLAUSE_ADD_INSTANCE',
            clause: e.model.item
          });
          instance = -1;
          for (clause in ref$ = this.document.clauses) {
            clause = ref$[clause];
            if (clause.hash === hash) {
              instance = Object.keys(clause.instances).pop();
              break;
            }
          }
          if (instance < 0) {
            throw 'Instance was not added';
          }
          this.ssa.insert_html("<b>date</b>");
          this.ssa.insert_html("<docplater-document-clause hash=\"" + hash + "\" instance=\"" + instance + "\"></docplater-document-clause>");
        }
      }
    });
  });
}).call(this);
