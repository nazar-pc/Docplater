// Generated by LiveScript 1.4.0
/**
 * @package   Docplater app
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2016, Nazar Mokrynskyi
 * @license   AGPL-3.0, see license.txt
 */
(function(){
  var Event;
  Event = cs.Event;
  Polymer({
    is: 'docplater-document-parameters-panel',
    properties: {
      data: {
        observer: '_data_set',
        type: Object
      },
      parameters_map: Array
    },
    _data_set: function(){
      var parameters_map, clause_hash, clause, this$ = this;
      parameters_map = [{
        'for': 'Document',
        parameters: Object.values(this.data.parameters)
      }];
      Promise.all((function(){
        var ref$, own$ = {}.hasOwnProperty, results$ = [];
        for (clause_hash in ref$ = this.data.clauses) if (own$.call(ref$, clause_hash)) {
          clause = ref$[clause_hash];
          results$.push(cs.api("get api/Docplater_app/clauses/" + clause_hash));
        }
        return results$;
      }.call(this))).then(function(clauses){
        var i$, len$, clause, parameters;
        console.log(clauses);
        for (i$ = 0, len$ = clauses.length; i$ < len$; ++i$) {
          clause = clauses[i$];
          parameters = Object.values(this$.data.clauses[clause.hash].parameters);
          if (parameters.length) {
            parameters_map.push({
              'for': clause.title,
              parameters: parameters
            });
          }
        }
        this$.parameters_map = parameters_map;
      });
    },
    _parameter_highlight: function(e){
      Event.fire('docplater/parameter/highlight', {
        absolute_id: e.model.parameter.absolute_id
      });
    },
    _parameter_unhighlight: function(){
      Event.fire('docplater/parameter/highlight');
    }
  });
}).call(this);
