// Generated by LiveScript 1.4.0
/**
 * @package   Docplater app
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2016, Nazar Mokrynskyi
 * @license   AGPL-3.0, see license.txt
 */
(function(){
  var Parameter, Event;
  Parameter = cs.Docplater.Parameter;
  Event = cs.Event;
  Polymer({
    is: 'docplater-document-parameter',
    behaviors: [cs.Docplater.behaviors.document, cs.Docplater.behaviors.document_clause],
    hostAttributes: {
      contenteditable: 'false',
      tabindex: 0
    },
    properties: {
      highlight: {
        reflectToAttribute: true,
        type: Boolean
      },
      name: String
    },
    listeners: {
      'focus': '_focus_in',
      'blur': '_focus_out'
    },
    created: function(){
      this._highlighting = this._highlighting.bind(this);
      Event.on('dockplater/property/highlight', this._highlighting);
    },
    attached: function(){
      this.name = this.textContent.trim();
    },
    _focus_in: function(){
      Event.fire('dockplater/property/highlight', {
        name: this.name
      });
    },
    _focus_out: function(){
      Event.fire('dockplater/property/highlight');
    },
    _highlighting: function(arg$){
      var name;
      if (arg$ != null) {
        name = arg$.name;
      }
      this.highlight = name === this.name;
    }
  });
}).call(this);
