// Generated by LiveScript 1.4.0
/**
 * @package   CleverStyle Widgets
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015-2016, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */
(function(){
  Polymer.cs.behaviors.csIcon = [
    Polymer.cs.behaviors['this'], Polymer.cs.behaviors.tooltip, {
      observers: ['_icon_changed(icon, flipX, flipY, mono, rotate, spin, spinStep)'],
      properties: {
        icon: {
          reflectToAttribute: true,
          type: String
        },
        flipX: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        flipY: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        mono: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        rotate: {
          reflectToAttribute: true,
          type: Number,
          value: false
        },
        spin: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        spinStep: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        multiple: {
          type: Boolean,
          value: false
        },
        stacked1: String,
        stacked2: String,
        regular: String
      },
      attached: function(){
        this.hidden = this.icon === undefined;
      },
      _icon_changed: function(icon, flipX, flipY, mono, rotate, spin, spinStep){
        var class_prefix, icons;
        if (!icon) {
          this.hidden = true;
          return;
        } else if (this.hidden) {
          this.hidden = false;
        }
        class_prefix = '';
        if (flipX) {
          class_prefix += 'fa-flip-horizontal ';
        }
        if (flipY) {
          class_prefix += 'fa-flip-vertical ';
        }
        if (mono) {
          class_prefix += 'fa-fw ';
        }
        if (rotate) {
          class_prefix += "fa-rotate-" + rotate + " ";
        }
        if (spin) {
          class_prefix += 'fa-spin ';
        }
        if (spinStep) {
          class_prefix += 'fa-pulse ';
        }
        class_prefix += 'fa fa-';
        icons = icon.split(' ');
        this.multiple = icons.length > 1;
        if (this.multiple) {
          this.stacked1 = class_prefix + icons[0] + 'fa-stack-2x';
          this.stacked2 = class_prefix + icons[1] + 'fa-stack-1x fa-inverse';
        } else {
          this.regular = class_prefix + icons[0];
        }
      }
    }
  ];
}).call(this);
